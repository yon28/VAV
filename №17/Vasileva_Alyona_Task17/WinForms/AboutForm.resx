<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ctlPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBhIQEBQQEBQWFRQUFBUVFBYVFBQVFBUUFhQVFBQVFBUY
        HCYeFxkjGRQVHy8gIycpLCwsFR4xNTAqNSYrLyn/2wBDAQkKCg4MDhoPDxosJB8kLCksLS0tKi0pLCwp
        KSksLSwpLCksKikpLCkpKSwsKSwsLCkpLCwsKSksLCwsLCwsLCz/wAARCACoASwDASIAAhEBAxEB/8QA
        GwAAAQUBAQAAAAAAAAAAAAAAAAECAwQFBgf/xABAEAABAwMCAwUGAwUHBAMAAAABAAIRAxIhBDEFQVEG
        EyJhcRQygZGhsULR8FKCweHxBxUjM2JyokODktIWJFP/xAAZAQADAQEBAAAAAAAAAAAAAAAAAQMCBAX/
        xAAuEQACAgEDAwIFBQADAQAAAAAAAQIRAxIhMQQTQVGhFGGRsdEiMlJxgeHw8YL/2gAMAwEAAhEDEQA/
        APHAE4BACcAuk5bEASwlhLCdGbEhEJ1qcGrVCsjhEKYMS92npFqIYRCm7tFiNItRDCIUtqWxGkeoihFq
        m7tHdo0i1EMJYUvdphaigsbCE6EQgdjUqUNS2ooVjUsJbUWp0FiQiEtqLUUFjUJ0IhADYSwlRCAEhEJU
        IASEQlQgBsIhORCVBYyEhapISQih2RQkhSEJLVmh2MATgEoCeAmkDY0NSp4agsWqM2MShODFI2lO2UJC
        bIgVLctTg/ZDVawPOmph/dxd42Ai6bfeI3g/JO1fY3W0yQ7S14HMUnOHn7oITMujHL025SP0zmmHAj1B
        H3SCmnuO0MuTmuTixMLEbi2H3JLkliCxG4bDg9NIStpmU57CN0wI4RCVKkMVoSwmoTMjoS2pGBPTE2Nh
        IQlLk0lADHBdH2W7B19dD57qkSYe4E3xg2DmBtJx6wYo9meC+2ayhpiYFR4Dz0pgF9QjzDGuK9E7Z8Rr
        UW0+4llshrWADuaYEMaG8gGwJ8vNPHDW38iebK4JJcs57Xdi9NQvvc4gNlsVWmq4zmaYb4B6nHms6t2I
        NSn3mkcamCTTc2H4OQ07OKvcD4RWrVvau8ZAJueRdD7ThzQPqPXdb2l44+lXLqdUvIjFjQ1vIhu8tmPm
        PVdqwxkqo4ZZ5wl+6/X/AL/4eWOYQSCIIMEHBBG4ISQuu7ecNF7dUwYqmHwIF8XA/ESP3VykLiyY3CTi
        z0MWRZIKSGQiE+EkKdFbGwiE6EQnQWNhJCciEqCxsJsKQhJCVDTGgJ4CibVbvn03+sqUVQTvz+GfRCaG
        0x4CdCibUM7c4+35qUmN9xyzn0W00YaZJSogxJ3+YHVa3AtFJc8FxtkNaDDqkggMEGQSJ2mFkac3GZjl
        k7+n13W/wkupkPY8AgECMwDExdMT13wr4o6mc+aWlGtwPhmrpV+9c2wkubU8NQh7ajIsIAIdTEkHO+eh
        VzhXCn0HE1dSLqYJhjiIe+SS9x/GRiSLtugUbOM16YAuc6eZh3zJMwsnV131CTUft+EDAJEF0Y8UDc7r
        qeGMd6OJZpT2ujquKcG1mpoCSHNtBINhAaIPhc4lznwNxnfJXnGr0ZDy2ILT4xmGZiCTsRtnmuqHa+rR
        o93Qe6fxVHm54cWgeCfcAiOZ9FmcKcQ2u82ud3ci4BwfNRt2/wCIAE/PooSVsvjbiiTgfDNO4uD2d4R0
        dUIiJwGDPSfPZN4jR0jiGUKLg+8D3neIREAEmDMcvyUdTXghooNdeH3l5LTDtm2hrQAAAAAB18oi0nC6
        r5saXujOCSPP0yqKmqS9jLTT1OT/AKsu6HhujDSarXlw5XEZ6RM/FR6jVUGNIpaZgccXPL6jmnq0ExKq
        jTVGuIcDOxGceSmY1l0mREgiJ5ZWqTVJJGLcXbbZV1FEuph7PCWAF20Ot3MnHz/gt/i/ZhlTQUtXpxca
        lZ7XAG4h3iuHp4J/eOTicnXUO8aREtxHXz9FntqajSgmm53dyC5u4B/C5zRiYkBwzuJXPki4v5eTphJT
        XO/gpVNMQYIUVi7jTazTa/Rw9pp6tjv8xrWlr2ZIL2+9OINvkYK5jUaFzfeaRiZ5EeSnovdFFOtnyZ1q
        LVM5sJIWaN6iKEqfaktSoLGQiE+EQih2dB/Z5qG0+JUS8wHd7TnoalGoxv1cB8Vq8Y1NdurfT594QOYi
        7cerT8iuLYSCCDBBBBG4IyCF1VPiZ1TAWtmu0iQCQ7bJYBuDg429IXT07Sb3OTqU3Tqyxo9Y/Sd5SfMC
        Q20taCSfE45z0kLX7CcHZre9cLgWFsAjeQMAg+Q+WywtBwmtqdRb3bmCebHPLIiMuzvC9F4Pwh3DdO6t
        rH06QMlxudY2dgGnLnEYtEk4wqZMulbOvQjDFqfF+tGB/alwdmk4fSpkgvfqQWZnwU6dS4/N7fmvKYXT
        9uu1juI6gPALaVNtlFrt7d3PdyuccnpAHKVzcLiuUt5cnoJRgtMOBkIhPhFqKCxkIhPtRCKHZHCIT4Ra
        igsjISQpbUlqVDsywU5rk1Oa7MrlR2MsN1T4i48hvyGyTvTM/wA1BKUuW9RjSTOrHnGMJ9PVubEOONuk
        qtcllGpi0o1KPH6rdzcPPKtf/Im4JYT8QM/Jc/clDlVZ5ryTfTwfg6ehxTTvgPuZIEw2QHQ7oRIwJ/3Y
        Wu5+mFrKdSoS5hdLarabAyS0i0g3E75M+ELgg5Plb+Ib5RN9MvDZ6PpuB0aDTWL6oGGgsaxwq3AgGk4G
        XCWmTaANt10ekIrUwKOnbLRZJq021JA94MIgnzI326rxz2txGcncE4c0yMhwycCIOMqzS4vXBFryXC6D
        i4lzrnZOXEk81SPUV4Iz6Ry3s7fUUHU3Oa65rhgiIcP481nO0ry6GkDEgkgT18RxPkfqs/V9ttY6mGVI
        gNtLnsvJwRIL5tOfwwoqXaZrS0Na60DxhzyS5xJlzf2RFsNzzzldD6mEtnsc8elnFXyW9RoK7CBUlzCR
        DmQYkiL3N25ieo8lqaDQwCHOc5rvwutdgj09Oa19DwajqtI7WUazHlhAqU3Btw5tyc55AgTBjZRUCLsw
        PLz9ORlXwRi7d2c+fJJJKqMLUcDqUSamn2wYicAyQB8Af6LUu9pohwhtRodeA3wuGJcGt92HZI8zthdJ
        pix4yNsH+SgfRZTqhwYCfW2cQcczH2HRPs0/0/Qn8Ta/Vz6nnFfRubIf70gA7giJkO5jIVZ9EjcL1ero
        tPqmEQA45IGHA7yOizNd2ZMf4ZBx4mPHgeesx4XeYx1Ch2ToXVep5xCSF0HEezdRhkN5ExzEe9gch8li
        vpQoyxuPJ0xyKXBDCWE+1FqxRuyOEAQZGCMgjcHqFJai1FBZr0O2vEGCG6utyGXXGBsLnSceqzuIcSra
        h1+oq1KruRqPc8j0k4+ChtRaloQ9bI4RapLUWp0KyOEQpIRaigsjhFqfai1FDsjtRapC1EJUFkcIhPhL
        CKCzEhBTbkl64LPSoeZBSptyWQmKhZQEhCJQFDgU6oZM895TBKVwTECE4/RLZMIAYCpGuhMA/XzKeQmh
        Mno657ZAODEgwdo6+g+SY8Anw4kT6dd/NROZ1Ujaa1bezMUluh+m1j6Rmm5zSRktJEjpjdWK+uNUeMuk
        Zw4wXdSD9wqvdwYTjQ+H6/qtJtKhNJuzY0HbDVUCPGXtG4fmRgRO4K3avbaXAPpm0xi4H1t/QXFd0d+X
        rg5/XySkGMYjy+ytDPkh5OfJ02Ke7R2+p7V0mtlrXhwy0RH1kiIJRov7TLMPpk9RLSI8wd/p8FxLalu/
        66qRtVp3aCPX4fr0VX1U5efYiuixxXHud7qu32krttdRe3BnN0HAbZkObznJ5Qua1r6TiTRfcJ91/hf8
        CcO+hWS8NwAI/ry+AKlo6aZyPLIzyxMfWEu7J7MfYhF2tiVrgfyOCn92U06ODBI3I6ER5KCuwt+Ikemy
        La5HpTexZ7spO7KqN1LhzPzUjeIP6j5BCnEHCXgsd2nNoE7BMHFzbFrc7nM/DOFd4d2kbS3otcernO+0
        YW4uDe7JyjkS2RXOkd0Kb3B6Lfd2l0dX/MoFp2lpbt9Oart45paYxTcfFgvy0H0npynkqacf8iSll/i7
        Mr2MgScDqdkj6UEiCSNxGR8Fpavj+nf4XXvE3XG1sEA4axuAEVOO6bkxwIbDSABEfh39EVj8SQ08nmLM
        kRvn5K3oNMHk7CGkiZz1iDuBn4KH++m5ButIIxEzG5HPkpNNxinbBbmcQ2XfAjM4OZwsRcL5NyjOuCHU
        NIdaQAegO/LCjLDMRn5q4zSVawBLPwkk88dAJ54z1C0Kns+maO/D6jy24UxFMAXEDvMl0490xuMJUvI7
        a2W5himTsFLW01hhzmz0uBj1iQqus4he8vYyMjw/hDdwIaG+ar167icwPIAD+Ck8iRdY2+TMbpnwXBpg
        c4MfNWdJTp+LvrtvDbzcYHiwYA3+Hmul1PDqIpNcx1v4XCpgGRktJZLdvlHmqg0lNlKpUBDnS5sgl1Mg
        sLgGk5LgW5HQjKj2HFnR31JFKj2YqPax4c0XtcWjcwyJwNveHmMyBCqajhFVjQYDgSctMwQYtcNwcTts
        tvhXE4BpHu4Ye8a4lwh4MzI67GN8rdp90+ahDcva17WtFtQOwADMhzYkESRBG21o9PCa/Sznn1OTHL9S
        2OAY7lB/nt98KMvnltyXcnhOmY6o2PcNQC8NdEGZJGTB8z8FFo+D6RpkWuPg/DWMTM84ztlY+En6o38Z
        DmmcbJyAEknpy6fFb9Lh+la90Vw6HY8DtvFiNnfPl5p2l0mjucHViWyR/llnh55J+v0U1hb8r6oq88V4
        f0ZghwnIx59Ud5tnl+a3G0dJ/iHvXONuJbbzABBubcYjHP6JukpaG8XvcROxbYIkZkOmd+vpjJ2n6r6h
        3l6P6MxjU/XkkLsLpKtXhrHEsvOCPdvZmNriD1gyFm6bXaZoIfTcTdI8UED1lDx06ckEctq1Fmbf9k9t
        ZXqeu0odJouIun38RAH7InKBr9LcZoucCG/9SIi2bYDYMAiTPVZ0r+S9/wAGtT/i/b8lI6iP15IFZS1N
        bRiBpwPM1Xk/wTW6qmB/kg/9yp+aX+/f8D/x+35GjURslGrTn62ndIotH/cqefmkdracR3DfW+rn/ki/
        n9/wFfL7fkBqvLP6/XxSd+P1hSu4jSx/9dgIETfVyc595DuIUyAO4Z/5VOv+5Pb+S9/wZ/8Al+35G+0A
        +Z3lObVJ2neJPXMT0/koxrKf/wCLB+9V/wDZSs4g0bUmD96r6T7/AOpTT+YNfL7fkQalSF1R4ENcYGIa
        SOvII/vcYHds3nNx6cy4nkpKfF272Nb/ALbh9nBbTT5kYdriJVqNc3cEeoI+6KbhILtvmDzI9fzWk7tM
        8NLQ4wREXPj6vUWm7ROYIaGCRBFg8Q6OndDUL/d7CTnX7ff/AIGaPhrqommZI3GcCCZnYjBV2j2cq3CQ
        SME4xmcB0xyUOl44RJDWNmZhsAk7kgYlW9J2gc1wi3liXj7OVoLFtZHJLKrpE7ezb2Sbg0BpMva4COZu
        jCoapztMWuBjJgsNpluDBiecTzW9pe0Ya+o6q1tTDYJfVE82xDsBuQPUrm+0HEW1617g8e9gPloGIDbg
        SBjmStZdMY7cmMLnKdS4KdKuHuIcQ2ck2AnHLlv6qSq6m0kS55GxBAbGNxufxc+ilLtLGGPmN3Pnn0Ec
        vPmVVcaPO4ejGnpzL/L6lcztLlHWqb4aLur1NAf5QB2MkOge7O58WfLqoxxYS55BuLplpgcoEcsyfiom
        ihEufUgZgNA5meZ3x8kuoqUWsNmTEgm7cnYDYcvkm5Pm0hKK4psu6fjpY1zaN7RaZioRJc5onGT6fzWe
        zSVXNLwxw5knwtznnvyS8N4oymPEy8E5bNoy0gnAmQDgziT1V+pr2Pp2gBoIBAdJDSCQINu8RjaITVTW
        7/wTTg9o/wCmTXLm4OJAmJHIED5OBU1OkwgF25/1kc+lp+6z4uI23gnyECT8lrUxTM8oMZqNGdzHllSg
        7ZWapFB/FXOAuJNuGyTA9ByRR1LyCAZGcTjOCYVKEoJlS1y8ldEapG1peIU6bGgOzkv8InBBaJ6bz6Jm
        o484w9p8WeQFs48Mc4AyFkkJYVO9OqRLsQu3uTU9W8bEj+f3UTajhmfqUShStlaQkkZCA4pUEIGBdlAC
        fSolzg0bkwMgZ9TgK5Q4e28Co8CDBazxO3OAcN5bzz5pqLZltIoEoXYaVulpAVKdKncA3w6q95k5JLQW
        tDcRz94dVdfxDS6qk9tWgxrm0yS+hRY1twBNzHsAA5yHY285ssD9SLzpeGcElCc9mTBkTgxEjljkkIUa
        L2IlhACcWdUCGolKGEnAU/shmITSbE5JcldKFafpCAlocMqVCA0Ek9FrRK6oz3I1dlUkdD80rS3z+i2O
        IdmKtAA1BEtJ3/1AR9VX0nC3OMALfZmnTRPvQcbTKrKLD+19FO3QsPN3/FdFp+zboyQFab2d/wBQXZHo
        5+UcU+tguGcsOFsPN3/FSs4K39p3yC6lvZ8ftKd3BgzE59FZdF6og+v9GcuzsxP4nfIfmns7MZHjcP3f
        5rpDoLTv88LQ4dpC6QSDHT6Aqsejx+hGXXZErs5N3ZiP+of/ABH5o0/ZYFwl5O/4fL1XXa/hhbBBwfoe
        ir6fSEHcKnwmO+CfxuSv3HKVOydsxUnPNvL5qlquz5a73gR6Qu11GldHLdZus0TidlHJ0kEtkXxdZkb3
        kZ9PhNJ1E3MAjctJuPQ5Mx+SZU7O0yCWOZ7o8NR5BHmDbB/nzWvS0ThSOPgqup07u4rOjZo+6zLBGuPB
        uPUyur8mQdE1htlgjMB7Yn1J259FBqKVrBUbLRMkkRd0gjByncO0lwJAM/yWv7HqG0r2yW+8QciSCJjr
        5rmjjco2kdcssYSps5HSglxMGCScGPRXBoQPeeCTnDvpkLR0/asXEVKTHGTJgHy2cCFLU12je5zn0TJP
        ICPhDgB6AKEccK2lf97HRLJO941/W5yspZTJSyuOzsodKJSAIQIWUspqUNKYCyklSNoFO9mTpmdSIkoK
        sUtO2fEcR9YWi7QUoa5p5Q4cxHP7KkcbZiWVIp0OI1GZMPAERUaHjy970Uuq4tVqC21rWxFrG2iB9eX0
        XTFmkr0YEMcHkgx+FsxPrIXS6DgFPR0DUe1tRzWl4PODJGOXvFdsenk9lLY4J9XCO7jueYP0FVoksIEB
        0xyIkfRMraBzS0ftNa74OAP8VucW49Url0+FpxA5CAI+izKNYAm4SIx6xhQlCF0mdEMk2ra3OtoaPQ0e
        Ey6Haqo4x1aMgD5LkalNp5J+s4gHYY2BIPyu/MfJV+8WpSjwjEISW75ZYpkN5J/eScLOq6nohtYjPNT7
        i4Kdpvc0gQ3JKs6bi7qZ/wAPc426rI0rS852C1WADZWxyb3WxHJCK2luW21KlV813Ex1PP8ARWlT1LW7
        YWP3yO+XVHJpOOePUbg4gnf3gsHvkvfqvfZL4dHUcL1V9amzq4fml4oyp3pjrjpygLndHxB1Koyq33mO
        a4erSCPsu147oXaqgx+n8TXm5hB5EZY7HhIMtIxkLccuq0yM8Ohp+DI0RfWc4zIEjwnYiAJ9VJwnXNpP
        dg5gZ+JP2WZpNRX01dtEhoktDmu908hc4T5Ldp8KdWqgBrBcAL2vBDjgugT4fj0W4TvfyYyQrbw+C1r+
        IB1Bzujmx84P8Vi+3pvafVim4adpBsPjIMi4bCfiT8lh+1FKedJ0h4unuNs3/bk06oLC9qKX2orPfKfD
        m97XiE32htj2HZ4g/NYftRR7Sjvh8Oauna2n7vWVa/vGGkDosH2pHtSSzVshvBbtnKtomZ6u/itaroIP
        1Vt9JpIMbGVMagXnwwpXZ6c87lVHKs05KmZo4Odp+ilDk65cigjsc2MbQg+X8BH5KOrpYEhT3IuWtKM6
        pFFq1+DcMdqH2MibSc84jH1WfVZzVnhOvNO6DEjB5iJ26JY6Ulq4Hk1ODceTo2dhdQW3EAb4WHrOG1KR
        IcDgkH1G66HgfaDU1HOMlzWCo47ZcGG0cuYCn0nFnVhVFVkF7SR5ENic+cL0O3imlptHm9zNjk9VNfIz
        NT2PqdwKzRylzSDOAs/hAuoakfitpx5DvJd9At7jPaHUNp92YhwAkdCIP681xwDmzB3ifNRzaITWlf2X
        wdycHra52+pddpC23u8lwM/DJV3Tdq60FrjcCwMg9Ar3ZanSIf3jgDkDOfEBsD6fVVOOcPpadzDSddJf
        M8gAI+5T0yhFTiw1wnN45K2ZA1BknrP1TAV0/BeD6erpiXPh/LPNZfGuBdy25rgcxj5/ZTlimo6uUbjl
        g5aeGZNRwCrvqE7Jap5KalTEBcu8mde0VZdfwsN0zKh955Py5fxVSnp+qsOqkgAnA2TblZxj4IqUianD
        dk/vFXuRctqVE3Gyx3iXvFWuRcnqFoLPeI7xV70Xo1BoLPeLU4H2nraR00yC0mSx2Wk9R0PmPqsK9F6a
        mJ409mdvqe3LKxPesdaWkWAMMOO5bU8Lh6LNPaosZZpmd3vLyZeZ+gXN3ovVO/Ij8ND0LZrkmSZJ3J3K
        TvVWvRep6yugs96l71Vb0Xp6w0FrvUd6q16L0aw0FnvUd6q16L0axaC13qO9VW9F6NYaClKW5RyiVyWd
        lElyLkyUSnYUPlNAhJKJRYUX9HxV9Jrmt2dkpHcVqSSDEzt0PJUZRK33JVVmO3G7onqahztzKZKjlErN
        2a0krapGxQXyopRKLHpJm1iNinu1TiIJJCrSiUamLSBpqRuEyUSkN2SXIuUcolOxaSW5FyilEosKJbkX
        KOUSixUS3IuTaRHNOeBy+60ILkXJlqW1IKHXIuTbVIxkZ/h/NMTAORcpmUC5t9uMDBG/mJlMdQ6RnlmR
        9FqmZtDJRKRzITYSND5RcmISsKH3IuSNAWpwnij9MTUbTY4Obb42kg88Hrhbire5mTpbIzc7pLlpajjb
        XtINJoJ5swPMkGT8j16qk8NHOfMTH1AQ0vDEm/KM2USlQuY6wlEoQgQSiUIQASiUIQASiUIQASiUIQAS
        iUIQASiUIQAsolIhACylBSITEOlKAhCaExWp0IQtIywJPVOBPNIhCExx8oSl39EIWhCB8f0+yXvM/wBU
        IRYUI5+eYSQUiEBwInWlIhIZJSNQOb3Ql8+GG3GRnA+HNdnwXhGsqkHXtD6YyGvc3HhIAtaDiSDy29EI
        Xf0eFTttv+vB5nX9Q8aUUlv58/4Mr9nWO1FSk9lOkwhpou8bQcAOaHyGlwOYcJM7rL1/Zc03loqsiB7x
        APylCFrNjhG9vP3Dp8s5ad+V9tj/2Q==
</value>
  </data>
</root>